name: Release

on:
  #push:
  #  branches: [ main ]
  workflow_dispatch:

env:
  DEFAULT_TAG_NAME: latest

  XMLDevourer_ProjectDirectory: XMLDevourer
  XMLDevourer_ProjectFile: XMLDevourer/XMLDevourer.csproj
  XMLDevourer_SolutionPath: XMLDevourer.sln
  XMLDevourer_Archive: XMLDevourer.zip

  RuntimeReadableLinux: linux
  RuntimeReadableWindows: windows
  
  Actions_Allow_Unsecure_Commands: true # Allows AddPath and SetEnv commands

jobs:
  build-windows-release:
    runs-on: windows-latest

    env:
      BuildType: Release
      RuntimeIdentifier: win-x64
      Framework: net5.0

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '5.0.x'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    # - name: Setup MSBuild.exe
    #   uses: microsoft/setup-msbuild@v1.0.1
    
    # Restore the application
    - name: Build .NET for release 
      run: dotnet publish $env:XMLDevourer_ProjectFile -c $env:BuildType --runtime $env:RuntimeIdentifier --framework $env:Framework
    # run: msbuild $env:XMLDevourer_ProjectFile /t:$env:XMLDevourer_ProjectDirectory /p:Configuration=$env:BuildType /p:RuntimeIdentifier=$env:RuntimeIdentifier /p:Framework=$env:Framework

    # Show filesystem
    - name: Print system
      run: dir

    # Archive the package
    - name: Create archive
      run: Compress-Archive -Path $env:XMLDevourer_ProjectDirectory\bin\$env:BuildType\$env:Framework\$env:RuntimeIdentifier\* -DestinationPath $env:RuntimeReadableWindows-$env:XMLDevourer_Archive

    # Upload package as artifact
    - name: Upload math result for job 1
      uses: actions/upload-artifact@v2
      with:
        name: windows-release
        path: builds\windows\$env:XMLDevourer_Archive


  build-linux-release:
    runs-on: ubuntu-latest

    env:
      BuildType: release
      RuntimeIdentifier: linux-x64
      Framework: net5.0

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK 5.0.x
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '5.0.x'
    - name: Build .NET for release
      run: dotnet publish ${{ env.XMLDevourer_ProjectFile }} -c ${{ env.BuildType }} --runtime ${{ env.RuntimeIdentifier }} --framework ${{ env.Framework }}

    # Archive the package
    - name: Create archive
      uses: thedoctor0/zip-release@master
      with:
        path: ${{ env.XMLDevourer_ProjectDirectory }}/bin/${{ env.BuildType }}/${{ env.Framework }}/${{ env.RuntimeIdentifier }}
        filename: ${{ env.RuntimeReadableLinux }}-${{ env.XMLDevourer_Archive }}

    # Upload package as artifact
    - name: Upload package as artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-release
        path: ${{ env.RuntimeReadableLinux }}-${{ env.XMLDevourer_Archive }}


  create-release:
    runs-on: ubuntu-latest

    needs: 
    # - build-windows-release
    - build-linux-release

    steps:
    # # Get Windows artifacts
    # - name: Get Windows artifacts
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: windows-release
    
    # Get Linux artifacts
    - name: Get Linux artifacts
      uses: actions/download-artifact@v2
      with:
        name: linux-release

    # Create release tag
    - name: Create release tag
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.DEFAULT_TAG_NAME }}
        files: | 
          ${{ env.RuntimeReadableLinux }}-${{ env.XMLDevourer_Archive }} 
        # ${{ env.RuntimeReadablWindows }}-${{ env.XMLDevourer_Archive }}
